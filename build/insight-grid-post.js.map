{"version":3,"file":"insight-grid-post.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNiE;AACd;AAEnDG,EAAE,CAACC,MAAM,CAACC,iBAAiB,CAAC,iCAAiC,EAAE;EAC7DC,KAAK,EAAE,sBAAsB;EAC7BC,UAAU,EAAE;IACVC,aAAa,EAAE;MACbC,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAI,EAAE,SAAAA,CAAAC,IAAA,EAAyC;IAAA,IAA/B;MAAEL,UAAU;MAAEM;IAAc,CAAC,GAAAD,IAAA;IAC3C,MAAM;MAAEJ;IAAc,CAAC,GAAGD,UAAU;IACpC,MAAMO,gBAAgB,GAAIC,QAAQ,IAAK;MACrCF,aAAa,CAAC;QAAEL,aAAa,EAAEO;MAAS,CAAC,CAAC;IAC5C,CAAC;IAED,MAAMC,eAAe,GAAG,CACtB;MAAEC,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC,EAChC;MAAED,KAAK,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAClC;MAAED,KAAK,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC,CACjC;IAED,MAAMC,iBAAiB,GAAGjB,iEAAa,CACrCF,4DAAS,EACT;MAAEM,KAAK,EAAE;IAAiB,CAAC,EAC3BJ,iEAAa,CAACD,gEAAa,EAAE;MAC3BiB,KAAK,EAAE,cAAc;MACrBD,KAAK,EAAET,aAAa;MACpBY,OAAO,EAAEJ,eAAe;MACxBK,QAAQ,EAAEP;IACZ,CAAC,CACH,CAAC;IAED,OAAO,CACLZ,iEAAa,CACX,KAAK,EACL;MAAEoB,SAAS,EAAE;IAAwB,CAAC,EACtC,kCACF,CAAC,EACDH,iBAAiB,CAClB;EACH,CAAC;EACDI,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAO,IAAI;EACb;AACF,CAAC,CAAC,C","sources":["webpack://alkf-theme/external window [\"wp\",\"components\"]","webpack://alkf-theme/external window [\"wp\",\"element\"]","webpack://alkf-theme/webpack/bootstrap","webpack://alkf-theme/webpack/runtime/compat get default export","webpack://alkf-theme/webpack/runtime/define property getters","webpack://alkf-theme/webpack/runtime/hasOwnProperty shorthand","webpack://alkf-theme/webpack/runtime/make namespace object","webpack://alkf-theme/./our-blocks/insight-grid-post.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { PanelBody, SelectControl } from \"@wordpress/components\";\nimport { createElement } from \"@wordpress/element\";\n\nwp.blocks.registerBlockType(\"ourblocktheme/insight-grid-post\", {\n  title: \"Insight - Grid Posts\",\n  attributes: {\n    dropdownValue: {\n      type: \"string\",\n      default: \"option1\",\n    },\n  },\n  edit: function ({ attributes, setAttributes }) {\n    const { dropdownValue } = attributes;\n    const onChangeDropdown = (newValue) => {\n      setAttributes({ dropdownValue: newValue });\n    };\n\n    const dropdownOptions = [\n      { value: \"news\", label: \"News\" },\n      { value: \"award\", label: \"Award\" },\n      { value: \"blog\", label: \"Blog\" },\n    ];\n\n    const inspectorControls = createElement(\n      PanelBody,\n      { title: \"Block Settings\" },\n      createElement(SelectControl, {\n        label: \"Insight Type\",\n        value: dropdownValue,\n        options: dropdownOptions,\n        onChange: onChangeDropdown,\n      })\n    );\n\n    return [\n      createElement(\n        \"div\",\n        { className: \"our-placeholder-block\" },\n        \"Insight Swiper Posts Placeholder\"\n      ),\n      inspectorControls\n    ];\n  },\n  save: function () {\n    return null\n  }\n})\n\n"],"names":["PanelBody","SelectControl","createElement","wp","blocks","registerBlockType","title","attributes","dropdownValue","type","default","edit","_ref","setAttributes","onChangeDropdown","newValue","dropdownOptions","value","label","inspectorControls","options","onChange","className","save"],"sourceRoot":""}